import * as D from 'win32-def/def';
import type * as T from 'win32-def/types';
export declare class DefKernel32 implements T.LibDefBase {
    [x: string]: T.FnDefFullParams;
    static FormatMessageW: (D.Def.uint32 | string[])[];
    static FreeConsole: (D.Def.int32 | never[])[];
    static GenerateConsoleCtrlEvent: (D.Def.int32 | D.Def.uint32[])[];
    /** err code: https://msdn.microsoft.com/zh-cn/library/windows/desktop/ms681381(v=vs.85).aspx */
    static GetLastError: (D.Def.uint32 | never[])[];
    /** retrieve value from buf by readUInt32() */
    static GetModuleHandleW: (D.Def.uint32 | D.Def.uint64 | string[])[];
    /** flags, optional LPCTSTR name, ref hModule */
    static GetModuleHandleExW: (D.Def.int32 | string[])[];
    static GetProcessHeaps: (D.Def.uint32 | (D.Def.uint32 | D.Def.uint32PtrPtr | D.Def.uint64PtrPtr)[])[];
    /** https://learn.microsoft.com/zh-cn/windows/win32/api/libloaderapi/nf-libloaderapi-getprocaddress */
    static GetProcAddress: (string | string[])[];
    static GetSystemTimes: (D.Def.int32 | string[])[];
    /** https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount */
    static GetTickCount: (D.Def.uint32 | never[])[];
    static HeapFree: (D.Def.int32 | (D.Def.uint32 | D.Def.uint64 | D.Def.voidPtr)[])[];
    /** https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryexw */
    static LoadLibraryExW: (D.Def.uint32 | D.Def.uint64 | string[])[];
    static OpenProcess: (D.Def.uint32 | D.Def.uint64 | (D.Def.int32 | D.Def.uint32)[])[];
    static OutputDebugStringW: (D.Def.void | D.Def.int16Ptr[])[];
    static SetLastError: (D.Def.void | D.Def.uint32[])[];
    static SetThreadExecutionState: (D.Def.int | D.Def.int[])[];
}
//# sourceMappingURL=api.def.d.ts.map