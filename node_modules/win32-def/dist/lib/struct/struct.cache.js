import assert from 'node:assert';
export class StructUnionCache {
    static cacheStructMap = new Map();
    static cacheUnionMap = new Map();
    // #region STRUCT
    static getStruct(key) {
        assert(key, `key is empty`);
        return StructUnionCache.cacheStructMap.get(key);
    }
    static setStruct(key, value) {
        assert(key, `key is empty`);
        StructUnionCache.cacheStructMap.set(key, value);
    }
    static removeStruct(key) {
        assert(key, `key is empty`);
        return StructUnionCache.cacheStructMap.delete(key);
    }
    // #region UNION
    static getUnion(key) {
        assert(key, `key is empty`);
        return StructUnionCache.cacheUnionMap.get(key);
    }
    static setUnion(key, value) {
        assert(key, `key is empty`);
        StructUnionCache.cacheUnionMap.set(key, value);
    }
    static removeUnion(key) {
        assert(key, `key is empty`);
        return StructUnionCache.cacheUnionMap.delete(key);
    }
}
//# sourceMappingURL=struct.cache.js.map